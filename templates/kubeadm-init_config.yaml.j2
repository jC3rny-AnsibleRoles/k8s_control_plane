apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: "{{ k8s_kubernetes_version | default('stable') }}"
clusterName: "{{ k8s_kubernetes_cluster_name }}"
controlPlaneEndpoint: "{{ k8s_kubernetes_endpoint_fqdn }}:{{ k8s_kubernetes_endpoint_port }}"
networking:
  dnsDomain: "{{ k8s_kubernetes_cluster_domain }}"
  serviceSubnet: "{{ k8s_kubernetes_service_subnet }}"
  podSubnet: "{{ k8s_kubernetes_pod_subnet }}"
apiServer:
  certSANs:
    - {{ k8s_kubernetes_endpoint_fqdn }}
    - {{ k8s_kubernetes_endpoint_vip }}
{% for host in ansible_play_hosts %}
    - {{ hostvars[host].ansible_fqdn }}
    - {{ hostvars[host].ansible_default_ipv4.address }}
{% endfor %}
  extraArgs:
    enable-admission-plugins: {{ k8s_kubernetes_admission_plugins | join(',') }}
    etcd-servers: {% for host in ansible_play_hosts %}https://{{ hostvars[host].ansible_fqdn }}:2379{% if not loop.last %},{% endif %}{% endfor %}

etcd:
  local:
    serverCertSANs:
{% for host in ansible_play_hosts %}
      - {{ hostvars[host].ansible_fqdn }}
      - {{ hostvars[host].ansible_default_ipv4.address }}
{% endfor %}
    peerCertSANs:
{% for host in ansible_play_hosts %}
      - {{ hostvars[host].ansible_fqdn }}
      - {{ hostvars[host].ansible_default_ipv4.address }}
{% endfor %}

{% if k8s_kubeadm_initConfiguration_nodeRegistration_no_taints %}
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
nodeRegistration:
# {% if k8s_kubeadm_initConfiguration_nodeRegistration_kubeletExtraArgs != "" %}
#   kubeletExtraArgs: "{{ k8s_kubeadm_initConfiguration_nodeRegistration_kubeletExtraArgs }}"
# {% endif %}

  taints: []
{% endif %}
